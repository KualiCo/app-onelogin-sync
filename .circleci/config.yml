version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Installing Slack script
          command: |
            echo "slack_message=\${@}; curl --silent --data-urlencode \"\$(printf 'payload={\"text\": \"%s\"}' \"\${slack_message}\" )\" \$APP_SLACK_WEBHOOK" > slack
            chmod +x slack
      - run:
          name: Updating Slack
          command: ./slack $CIRCLE_PROJECT_REPONAME build started $CIRCLE_USERNAME $CIRCLE_BRANCH $CIRCLE_PULL_REQUEST
      - run:
          name: Setting build version
          command: |
            date +%Y%m%d%H%M%S > .version
            cat .version
      - run:
          name: Installing aws
          command: |
            sudo apt-get update
            sudo apt-get install python-pip
            sudo pip install --upgrade pip
            sudo pip install awscli --upgrade
      - run:
          name: Logging into aws ecr
          command: eval $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION --registry-ids $REGISTRY_ID)
      - run:
          name: Building and pushing docker image
          command: |
            export REPOSITORY=${REPOSITORY_BASE}${CIRCLE_PROJECT_REPONAME}
            echo $REPOSITORY
            docker build -t $REPOSITORY:latest -t $REPOSITORY:"$(cat .version)" .
            docker push $REPOSITORY:"$(cat .version)"
            docker push $REPOSITORY:latest
      - run:
          name: Installing kops and kubectl
          command: |
            wget -O kops https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
            chmod +x ./kops
            sudo mv ./kops /usr/local/bin/
            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
      - run:
          name: Getting kubernetes config
          command: kops export kubecfg --name $CLUSTER_NAME_USWEST2 --state $CLUSTER_STATE_USWEST2
      - run:
          name: Deploying to production
          command: |
            export REPOSITORY=${REPOSITORY_BASE}${CIRCLE_PROJECT_REPONAME}
            kubectl config set-context production --namespace=production --cluster=$CLUSTER_NAME_USWEST2 --user=$CLUSTER_NAME_USWEST2
            kubectl config use-context production
            TAG="$(cat .version)"
            TEMPLATE=`cat "cronjob.yaml" | sed -e "s?{{REPOSITORY}}?$REPOSITORY?g" -e "s?{{TAG}}?$TAG?g"`
            echo "$TEMPLATE" | kubectl apply --record=true --filename=-
            echo $?
      - run:
          name: Updating Slack
          command: ./slack $CIRCLE_PROJECT_REPONAME built and published docker image

workflows:
  version: 2
  workflow:
    jobs:
      - build:
          context: org-app-builder
